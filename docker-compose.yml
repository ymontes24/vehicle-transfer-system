version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: vehicle-transfer-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-vehicle_transfer_system}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vehicle-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: vehicle-transfer-api
    restart: always
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=${DB_DATABASE:-vehicle_transfer_system}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - JWT_COOKIE_EXPIRES_IN=${JWT_COOKIE_EXPIRES_IN:-1}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:4200}
    networks:
      - vehicle-network

networks:
  vehicle-network:
    driver: bridge

volumes:
  postgres_data:
